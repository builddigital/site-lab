{"name":"Site Lab","tagline":"Open source website analyzer and technology tracker. Built with Ruby on Rails 4. ","body":"Site Lab\r\n=====\r\n\r\nSite Lab aims to be an open-source replacement for website analysis tools such as BuiltWith, NerdyData, and DataNyze. \r\n\r\nSite Lab is a Ruby on Rails application. It uses PostgreSQL as its database and Redis + Sidekiq for background processing (background processing still in the works). \r\n\r\nScreenshot\r\n-----\r\n\r\n![Screenshot](https://raw.githubusercontent.com/callmeed/site-lab/master/screen.png)\r\n\r\nDemo\r\n-----\r\n\r\nThere is a live demo on Heroku at [http://sitelabdemo.herokuapp.com/](http://sitelabdemo.herokuapp.com/technologies). Please be a good citizen wrt the demo (e.g. try it with real-world data & submit issues if you find a problem). \r\n\r\nThe demo is currently a few commits behind as I haven't had a chance to setup Redis/Sidekiq on Heroku (now used in SiteLab for background processing). \r\n\r\nHow Does it Work? \r\n-----\r\n\r\nRight now, it's fairly simple: \r\n\r\n- The [MetaInspector Gem](https://github.com/jaimeiniesta/metainspector) retrieves some basic info about the site/URL\r\n- There is a \"Technology\" model which stores regular expressions\r\n- Technologies are matched against the source of the sites/URLs\r\n- Much of the processing now happens in the background (via [Sidekiq](http://sidekiq.org/))\r\n\r\nMore complex analysis is in the works. \r\n\r\nWhy Did You Build This?\r\n-----\r\n\r\nTwo reasons: \r\n\r\n1. Current commercial SaaS products in this space are quite expensive (i.e. > $200/month). Mainly because they aim to be lead-generation services. I'm not disputing their value, I just have smaller needs and a smaller budget. \r\n2. I have some specialized needs (i.e. I want to search for specific/niche technologies), so I like the flexibility of being able to define my own parameters.\r\n\r\nInstallation\r\n-----\r\n\r\nIt's a Rails 4.1 app, so you'll need a dev environment that supports that (prolly RVM). You'll also need Redis installed and running (probably via Homebrew)\r\n\r\n- Clone the repo\r\n- Edit the database.yml file with your info\r\n- Run `bundle install` to install gems\r\n- Run `bundle exec rake db:create` to create the DB(s)\r\n- Run `bundle exec rake db:seed` to load the seed data\r\n- Run `foreman start -p 3000` to start the rails server & sidekiq locally on port 3000\r\n\r\nImporting Data\r\n-----\r\n\r\nWhile you can surely add sites/URLs one-by-one in the app, most use-cases will involve importing large sets of URLs from files or external sites. With that in mind, I've started a set of Rake tasks for importing URLs. Currently, it includes: \r\n\r\n- Importing all startups from AngelList for a given market \r\n- Importing all startup/product URLs listed on http://www.producthunt.com \r\n- Importing URLs from a text file (placed in app/import)\r\n\r\nRun a `rake -T` to see the tasks and required parameters\r\n\r\nTO-DOs & Roadmap\r\n-----\r\n\r\n- Grab response header to determine web server/stack (a curl -I)\r\n- Add some background processing\r\n- Add ElasticSearch for searching meta information\r\n- Add auto-import of external links ","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}